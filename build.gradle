buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'


// Non Modificare Sopra

version = "0.0.3"
group = "it.hurts.metallurgy_reforged"
archivesBaseName = "Metallurgy-4-Reforged"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2795"
    runDir = "run"
	mappings = "stable_39"
}

repositories {

// 	location of the maven that hosts JEI files
	maven {
		name = "Progwml6 maven"
		url = "http://dvs1.progwml6.com/files/maven"
	}
  
// location of a maven mirror for JEI files, as a fallback
	maven {
		name = "ModMaven"
		url = "modmaven.k-4u.nl"
	}
	
// 	Curseforge maven, in case some other maven goes offline
//	(Copied) I Need to study this 'maven'
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {

//	Compile against the JEI API but do not include it at runtime
	deobfProvided "mezz.jei:jei_1.12.2:4.13.+:api"
	
// 	At runtime, use the full JEI jar
	runtime "mezz.jei:jei_1.12.2:4.13.+"
}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'

        // Move access transformers to META-INF
        rename '(.+_at.cfg)', 'META-INF/$1'
    }

    def fmlat = {
        attributes 'FMLAT': 'metallurgy_at.cfg'
    }

    jar {
        manifest fmlat
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }

    task deobfJar(type: Jar) {
        from sourceSets.main.output
        classifier = 'deobf'
        manifest fmlat
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }

    task sourcesJar(type: Jar, dependsOn: 'sourceMainJava') {
        from "build/sources/main"
        from "build/resources/main"
        classifier "sources"
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }

    artifacts {
        archives deobfJar, sourcesJar
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                groupId = project.group
                artifactId = project.archivesBaseName
                version = project.version
                artifact deobfJar
                artifact sourcesJar
                artifact jar
            }
        }

        bintray {
            user = System.getenv('BINTRAY_USER')
            key = System.getenv('BINTRAY_KEY')
            publications = ['MyPublication']
            publish = true
            pkg {
                repo = 'Forge-Modding'
                name = 'Metallurgy-4-Reforged'
                licenses = ['GPL-3.0']
                vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
                version {
                    name = project.version
                    released = new Date()
                }
            }
        }
    }
}